@using Client.Services
@inherits ListBase

@if (@Watchlist == null)
{
    <Spinner/>
}
else if (Watchlist.Count == 0)
{
    <h3>No stocks added to the watchlist!</h3>
}
else
{
    <div class="container">
        <h2 class="p-3 text-center">Watchlist</h2>
        <table class="table table-striped table-bordered table table-responsive">
            <thead>
            <tr>
                <th></th>
                <th class="align-middle text-center">Ticker</th>
                <th class="align-middle text-center">Name</th>
                <th class="align-middle text-center">Market Identifier</th>
                <th class="align-middle text-center">Day</th>
                <th class="align-middle text-center">Month</th>

            </tr>
            </thead>
            <tbody>
            @foreach (var item in Watchlist)
            {
                Day = PriceChanges.Single(e => e.TickerSymbol == item.TickerSymbol).Day;
                DayColor = Day > 0 ? "green" : "red";
                Month = PriceChanges.Single(e => e.TickerSymbol == item.TickerSymbol).Month;
                MonthColor = Month > 0 ? "green" : "red";
                
                <tr>
                    <td>
                        <div class="d-flex align-items-center justify-content-center p-1" >
                            @if (item.ImgUrl != null)
                            {
                                <img src="@item.ImgUrl" alt="" style="max-width:180px; width: auto; height: 90px">
                            }
                            else
                            {
                                <img src="https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-15.png"
                                     alt="" style="max-width:180px; max-height:90px; width: auto; height: auto">
                            }

                        </div>
                    </td>
                    <td class="align-middle text-center">
                        @item.TickerSymbol
                    </td>
                    <td class="align-middle text-center">
                        @item.Name
                    </td>
                    <td class="align-middle text-center">
                        @item.MarketIdentifier
                    </td>
                    
                    <td class="align-middle text-center">
                        <div style="color: @DayColor">@Day %</div>
                    </td>

                    <td class="align-middle text-center">
                        <div style="color: @MonthColor">@Month %</div
                        >
                    </td>

                    <td class="align-middle">
                        <div class="col-md-12 text-center">
                            <a class="btn btn-primary" href="/stocks/@item.TickerSymbol">Details</a>
                            <a class="btn btn-danger" @onclick="() => DeleteFromWatchList(item.TickerSymbol)">Delete</a>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <Confirm @ref="DeleteConfirmation" ConfirmationChanged="ConfirmDeleteClick"></Confirm>
}

@code {

    private double Day { get; set; }

    private double Month { get; set; }

    private string DayColor { get; set; }

    private string MonthColor { get; set; }
    
    private void DeleteFromWatchList(string ticker)
    {
        TickerSymbol = ticker;
        DeleteConfirmation.Show(ticker);
    }

    private async Task ConfirmDeleteClick(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await UserService.RemoveFromWatchlistAsync(Username, TickerSymbol);
            Watchlist = await UserService.GetWatchlistAsync(Username);
        }
    }

}