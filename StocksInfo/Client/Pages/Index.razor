@page "/"
@using Blazored.LocalStorage
@using Client.Providers
@using System.Net.Http.Headers
@using Microsoft.IdentityModel.JsonWebTokens
@inject HttpClient _httpClient


@if (!_isAuthenticated)
{
    <div class="h-100 d-flex align-items-center justify-content-center">
        <h3>Welcome to Stock info app. Please sign in</h3>@Username
    </div>
}
else
{
    <h1>Welcome back @Username!</h1>
}

@code
{
    [Inject]
    AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    [Inject]
    ILocalStorageService? LocalStorageService { get; set; }

    bool _isAuthenticated;

    private string? Username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (LocalStorageService != null && await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            _isAuthenticated = true;
            var savedToken = await LocalStorageService.GetItemAsync<string>("bearerToken");

            var handler = new JsonWebTokenHandler();

            Username = handler.ReadJsonWebToken(savedToken).Subject;

            await ((AppAuthenticationStateProvider) AuthenticationStateProvider).SignIn();

            _httpClient.DefaultRequestHeaders.Authorization =
                new AuthenticationHeaderValue("bearer", savedToken);

            StateHasChanged();
        }
    }

}