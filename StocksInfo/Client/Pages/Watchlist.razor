@page "/watchlist"
@using Blazored.LocalStorage
@using Microsoft.IdentityModel.JsonWebTokens

@if (!isAuthenticated)
{
    <h1>You are not authorized to access this page</h1>
}
else
{
}

@code
{
    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    [Inject]
    ILocalStorageService _localStorageService { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    protected bool isAuthenticated = false;

    public string username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            isAuthenticated = true;
        }
        if (await _localStorageService.ContainKeyAsync("bearerToken"))
        {
            var savedToken = await _localStorageService.GetItemAsync<string>("bearerToken");

            var handler = new JsonWebTokenHandler();
            username = handler.ReadJsonWebToken(savedToken).Subject;
        }
    }

}