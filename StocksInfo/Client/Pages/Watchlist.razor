@page "/watchlist"
@using Blazored.LocalStorage
@using Microsoft.IdentityModel.JsonWebTokens

@if (!_isAuthenticated)
{
    <h1>You are not authorized to access this page</h1>
}
else if (Username == null)
{
    <Spinner/>
}
else
{
    <List Username="@Username"/>
}

@code
{
    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    [Inject]
    ILocalStorageService _localStorageService { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    private bool _isAuthenticated;

    private string? Username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            _isAuthenticated = true;
        }
        if (await _localStorageService.ContainKeyAsync("bearerToken"))
        {
            var savedToken = await _localStorageService.GetItemAsync<string>("bearerToken");

            var handler = new JsonWebTokenHandler();
            Username = handler.ReadJsonWebToken(savedToken).Subject;
        }
    }
}